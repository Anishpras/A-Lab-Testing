{"ast":null,"code":"var _jsxFileName = \"/home/shubham/Projects/a-lab/Amity_Virtual_Lab-master/src/containers/electronics/forwardBias.js\";\nimport React, { useState } from \"react\";\nimport \"./forward.css\";\nimport SmallNav from \"../../components/smallNav\";\nimport bg from \"../../images/experiment-bg.gif\";\nvar ammeterReading, volmeterReading;\n\nfunction ForwardBias() {\n  const [aReading, setAreading] = useState(0);\n  const [vReading, setVreading] = useState(0);\n  const [volt, setVolt] = useState(0.1);\n\n  function handleChange(events) {\n    var r, rs, rd, id, id1, vd, vr;\n    var vt = 0.026,\n        n = 1,\n        vdo = 0.7;\n    var isc = Math.pow(10, -12);\n    var diodevalue = 0.6;\n    r = 100;\n    rs = r;\n    vr = events.target.value;\n\n    if (vr > 15.0) {\n      alert(\"Please keep the value between range of 1.0 to 15.0\");\n      vr = 0;\n      ammeterReading = 0;\n      volmeterReading = 0;\n    }\n\n    rd = 0.3;\n    id = (parseFloat(vr) - parseFloat(diodevalue)) / (parseInt(rs) + parseFloat(rd)) * Math.pow(10, 3);\n    id1 = parseFloat(vr) / parseInt(rs);\n    var id1_is = Math.log(id1 / isc);\n    vd = n * vt * id1_is;\n\n    if (vr < vdo) {\n      ammeterReading = 0;\n      volmeterReading = 0;\n    } else {\n      ammeterReading = id.toPrecision(3);\n      volmeterReading = vd.toPrecision(3);\n    }\n\n    setVolt(vr);\n    setAreading(ammeterReading);\n    setVreading(volmeterReading);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SmallNav, {\n    head: \"Forward Bias P-N Junction\",\n    link: \"/pn-junction\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: bg,\n    alt: \"bg-animation\",\n    className: \"lab-bg ex-bg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"forward\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"exp forward-div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleChange,\n    value: volt,\n    name: \"voltageSupplied\",\n    placeholder: \"Voltage\",\n    className: \"f-input\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"f-a-reading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, aReading), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"f-v-reading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, vReading))));\n}\n\nexport default ForwardBias;","map":{"version":3,"sources":["/home/shubham/Projects/a-lab/Amity_Virtual_Lab-master/src/containers/electronics/forwardBias.js"],"names":["React","useState","SmallNav","bg","ammeterReading","volmeterReading","ForwardBias","aReading","setAreading","vReading","setVreading","volt","setVolt","handleChange","events","r","rs","rd","id","id1","vd","vr","vt","n","vdo","isc","Math","pow","diodevalue","target","value","alert","parseFloat","parseInt","id1_is","log","toPrecision"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./forward.css\";\nimport SmallNav from \"../../components/smallNav\";\nimport bg from \"../../images/experiment-bg.gif\";\nvar ammeterReading, volmeterReading;\nfunction ForwardBias() {\n  const [aReading, setAreading] = useState(0);\n  const [vReading, setVreading] = useState(0);\n  const [volt, setVolt] = useState(0.1);\n  function handleChange(events) {\n    var r, rs, rd, id, id1, vd, vr;\n    var vt = 0.026,\n      n = 1,\n      vdo = 0.7;\n    var isc = Math.pow(10, -12);\n    var diodevalue = 0.6;\n    r = 100;\n    rs = r;\n    vr = events.target.value;\n    if (vr > 15.0) {\n      alert(\"Please keep the value between range of 1.0 to 15.0\");\n      vr = 0;\n      ammeterReading = 0;\n      volmeterReading = 0;\n    }\n    rd = 0.3;\n    id =\n      ((parseFloat(vr) - parseFloat(diodevalue)) /\n        (parseInt(rs) + parseFloat(rd))) *\n      Math.pow(10, 3);\n    id1 = parseFloat(vr) / parseInt(rs);\n    var id1_is = Math.log(id1 / isc);\n    vd = n * vt * id1_is;\n    if (vr < vdo) {\n      ammeterReading = 0;\n      volmeterReading = 0;\n    } else {\n      ammeterReading = id.toPrecision(3);\n      volmeterReading = vd.toPrecision(3);\n    }\n    setVolt(vr);\n    setAreading(ammeterReading);\n    setVreading(volmeterReading);\n  }\n  return (\n    <div>\n      <SmallNav head={\"Forward Bias P-N Junction\"} link={\"/pn-junction\"} />\n      <img src={bg} alt=\"bg-animation\" className=\"lab-bg ex-bg\" />\n      <div className=\"forward\">\n        <div className=\"exp forward-div\">\n          <input\n            onChange={handleChange}\n            value={volt}\n            name=\"voltageSupplied\"\n            placeholder=\"Voltage\"\n            className=\"f-input\"\n            autoFocus\n          />\n          <div className=\"f-a-reading\">{aReading}</div>\n          <div className=\"f-v-reading\">{vReading}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default ForwardBias;\n"]},"metadata":{},"sourceType":"module"}